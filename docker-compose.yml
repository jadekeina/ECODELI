services:
  mysql:
    image: mysql:8.0
    container_name: ecodeli_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root-242
      MYSQL_DATABASE: ecodeli
      MYSQL_USER: dev-admin
      MYSQL_PASSWORD: dev_sandrine # Assurez-vous que c'est bien ce mot de passe
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ecodeli_net
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: ecodeli_api
    environment:
      DB_HOST: mysql
      DB_USER: dev-admin
      DB_PASSWORD: dev_sandrine # Assurez-vous que c'est bien ce mot de passe
      DB_NAME: ecodeli
      API_PORT: 3002
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "pgrep node || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - ecodeli_net

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: ecodeli_front
    environment:
      VITE_API_URL: http://localhost/api # <--- TRÈS IMPORTANT : Doit pointer vers le Nginx central pour l'API
    depends_on:
      api:
        condition: service_healthy
    networks:
      - ecodeli_net
    command: [ "tail", "-f", "/dev/null" ] # Garde le conteneur en vie

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: ecodeli_admin
    environment:
      VITE_API_URL: http://localhost/api # <--- TRÈS IMPORTANT : Doit pointer vers le Nginx central pour l'API
    depends_on:
      api:
        condition: service_healthy
    networks:
      - ecodeli_net
    command: [ "tail", "-f", "/dev/null" ] # Garde le conteneur en vie

  nginx:
    image: nginx:stable-alpine
    container_name: ecodeli_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Monter le fichier de configuration Nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      # Monter les dossiers 'dist' de vos applications front et admin
      - ./front/dist:/usr/share/nginx/html/front:ro # <--- IMPORTANT
      - ./admin/dist:/usr/share/nginx/html/admin:ro # <--- IMPORTANT
    depends_on:
      front:
        condition: service_started
      admin:
        condition: service_started
      api:
        condition: service_healthy
    networks:
      - ecodeli_net

volumes:
  mysql_data:

networks:
  ecodeli_net:
    driver: bridge